// https://github.com/kulya/jmeter-gradle-plugin

apply plugin: 'jmeter'
apply plugin: 'java'

buildscript {
    ext {
        pluginsVersion = "1.2.1"
    }
    repositories {
        mavenCentral()
		//mavenLocal()
    }
    dependencies {
        classpath "com.github.kulya:jmeter-gradle-plugin:1.3.4-2.13"
        classpath "org.codehaus.groovy:groovy-all:2.4.3"
        classpath group: 'kg.apc', name: 'jmeter-plugins-standard', version: pluginsVersion
        classpath group: 'kg.apc', name: 'jmeter-plugins-common', version: pluginsVersion
        classpath group: 'kg.apc', name: 'jmeter-plugins-extras', version: pluginsVersion
        classpath group: 'kg.apc', name: 'jmeter-plugins-extras-libs', version: pluginsVersion
        classpath group: 'kg.apc', name: 'jmeter-plugins-webdriver', version: pluginsVersion
    }
    configurations.classpath.exclude group: 'commons-math3', module: 'commons-math3'
    configurations.classpath.exclude group: 'commons-pool2', module: 'commons-pool2'
}

jmeterRun.configure {
    doFirst{
        println "See, i can do it."
    }
    jmeterTestFiles = [file("src/test/jmeter/test2.jmx")]
    jmeterUserPropertiesFiles = [file("src/test/jmeter/user.properties")]
    enableReports = true
    jmeterIgnoreFailure = false
    jmeterIgnoreError = false
}

jmeterEditor.configure {
    doFirst{
        println "See, i can do it."
    }
    maxHeapSize = "1200M"
    jmeterPluginJars = ["groovy","jmeter-plugins-standard", "jmeter-plugins-common","jmeter-plugins-extras","jmeter-plugins-extras-libs","jmeter-plugins-webdriver"]
}

task printBuildScriptClasspath << {
    println "\nLoading the following jmeter classpath jars..."
    project.buildscript.configurations.classpath.each {
        String jarName = it.getName();
        print jarName + ":"
    }
    println "\n"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}
